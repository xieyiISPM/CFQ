package secureShuffle;

import java.math.BigInteger;

/**
 * Online shuffling
 */
public class OnlineShuffling {
    /**
     * OnlineShuffling constructor
     */
    public OnlineShuffling(){

    }

    /**
     * Generate L3 list
     * @param vArray random array inputted by hospital
     * @param xB share
     * @param twoToL    2^L
     * @return L3
     * @throws Exception
     */
    public BigInteger[] genL3(BigInteger[] vArray, BigInteger[] xB, BigInteger twoToL) throws  Exception{
        if(vArray.length != xB.length){
            throw new ArrayIndexOutOfBoundsException();
        }
        BigInteger[] L3 =  new BigInteger[vArray.length];
        for(int i= 0; i< L3.length; i++){
            L3[i] = (xB[i].add(vArray[i])).mod(twoToL);
        }
        return L3;
    }

    /**
     * Generate L4 list
     * @param uArray random array generated by Cloud
     * @param L3    L3 list pass from hospital
     * @param xA    Cloud's share
     * @param twoToL 2^L
     * @param pi    Shuffling function owned by Cloud
     * @return
     * @throws Exception
     */
    public BigInteger[] genL4(BigInteger[] uArray, BigInteger[] L3, BigInteger[] xA, BigInteger twoToL, int[] pi) throws Exception{
        if((uArray.length != xA.length) || (L3.length != xA.length)){
            throw new ArrayIndexOutOfBoundsException();
        }
        BigInteger[] L4 = new BigInteger[uArray.length];
        for(int i= 0; i < L4.length; i++){
            L4[i] = ((L3[i].add(xA[i])).add(uArray[i])).mod(twoToL);
        }
        InitSet initSet = new InitSet();
       // printPi(pi);
        return initSet.permRandomArray(L4,pi);
    }

    private void printPi(int[] pi){
        System.out.print("pi function: ");
        for (int item: pi){
            System.out.print(item + " ");
        }
        System.out.println();
    }
}
